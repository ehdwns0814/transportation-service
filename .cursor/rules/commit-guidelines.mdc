---
description: 
globs: 
alwaysApply: false
---
# Git Commit Message Guidelines

## Commit Message Format

```
<type>: <subject>

<body>
```

## Commit Types

- **feat**: 새로운 기능 추가
- **fix**: 버그 수정
- **docs**: 문서 수정
- **style**: 코드 포맷팅, 세미콜론 누락, 코드 변경이 없는 경우
- **refactor**: 코드 리팩토링
- **test**: 테스트 코드, 리팩토링 테스트 코드 추가
- **chore**: 빌드 업무 수정, 패키지 매니저 수정

## Subject Guidelines

- 변경 사항에 대한 간단한 설명
- 50자 이내로 작성
- 마침표 없이 작성
- 현재 시제 사용

## Body Guidelines

- 변경 사항에 대한 자세한 설명
- 어떻게 보다는 무엇을, 왜 변경했는지 설명
- 여러 줄의 메시지를 작성할 땐 "-"로 구분

## Example

```plaintext
feat: 로그인 화면 키보드 UX 개선
- TextInput ref를 사용하여 자동 포커스 기능 추가
- returnKeyType 설정으로 키보드 엔터키 동작 개선
- 전화번호 입력 후 자동으로 비밀번호 입력창으로 포커스 이동
- 비밀번호 입력 후 엔터키로 로그인 가능하도록 개선
```

## Best Practices

1. 커밋 메시지는 명확하고 구체적으로 작성
2. 한 커밋에는 하나의 논리적 변경사항만 포함
3. 불필요한 공백이나 줄바꿈 피하기
4. 영문/한글 혼용 시 일관성 유지
5. 이슈 번호가 있는 경우 참조하기

